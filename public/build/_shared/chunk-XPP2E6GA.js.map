{
  "version": 3,
  "sources": ["empty-module:~/models/transaction.server", "../../../node_modules/remix-utils/browser/react/client-only.js", "../../../node_modules/remix-utils/browser/react/use-hydrated.js"],
  "sourcesContent": ["module.exports = {};", "import { Fragment as _Fragment, jsx as _jsx } from \"react/jsx-runtime\";\nimport { useHydrated } from \"./use-hydrated\";\n/**\n * Render the children only after the JS has loaded client-side. Use an optional\n * fallback component if the JS is not yet loaded.\n *\n * Example: Render a Chart component if JS loads, renders a simple FakeChart\n * component server-side or if there is no JS. The FakeChart can have only the\n * UI without the behavior or be a loading spinner or skeleton.\n * ```tsx\n * return (\n *   <ClientOnly fallback={<FakeChart />}>\n *     {() => <Chart />}\n *   </ClientOnly>\n * );\n * ```\n */\nexport function ClientOnly({ children, fallback = null }) {\n    return useHydrated() ? _jsx(_Fragment, { children: children() }) : _jsx(_Fragment, { children: fallback });\n}\n", "import { useEffect, useState } from \"react\";\nlet hydrating = true;\n/**\n * Return a boolean indicating if the JS has been hydrated already.\n * When doing Server-Side Rendering, the result will always be false.\n * When doing Client-Side Rendering, the result will always be false on the\n * first render and true from then on. Even if a new component renders it will\n * always start with true.\n *\n * Example: Disable a button that needs JS to work.\n * ```tsx\n * let hydrated = useHydrated();\n * return (\n *   <button type=\"button\" disabled={!hydrated} onClick={doSomethingCustom}>\n *     Click me\n *   </button>\n * );\n * ```\n */\nexport function useHydrated() {\n    let [hydrated, setHydrated] = useState(() => !hydrating);\n    useEffect(function hydrate() {\n        hydrating = false;\n        setHydrated(true);\n    }, []);\n    return hydrated;\n}\n"],
  "mappings": ";;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACAlB,yBAAmD;;;ACAnD,mBAAoC;AACpC,IAAI,YAAY;AAkBT,SAAS,cAAc;AAC1B,MAAI,CAAC,UAAU,WAAW,QAAI,uBAAS,MAAM,CAAC,SAAS;AACvD,8BAAU,SAAS,UAAU;AACzB,gBAAY;AACZ,gBAAY,IAAI;AAAA,EACpB,GAAG,CAAC,CAAC;AACL,SAAO;AACX;;;ADTO,SAAS,WAAW,EAAE,UAAU,WAAW,KAAK,GAAG;AACtD,SAAO,YAAY,QAAI,mBAAAA,KAAK,mBAAAC,UAAW,EAAE,UAAU,SAAS,EAAE,CAAC,QAAI,mBAAAD,KAAK,mBAAAC,UAAW,EAAE,UAAU,SAAS,CAAC;AAC7G;",
  "names": ["_jsx", "_Fragment"]
}
