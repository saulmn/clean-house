{
  "version": 3,
  "sources": ["../../../../../../app/routes/dashboard/overview/statistics/_route.tsx", "../../../../../../app/routes/dashboard/overview/statistics/components/LastTransaction.tsx", "../../../../../../app/routes/dashboard/overview/statistics/components/BalanceStatistics.client.tsx"],
  "sourcesContent": ["import type { V2_MetaFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { ClientOnly } from \"remix-utils\";\n// components\nimport {\n  ExpenseAnalysis,\n  ExpenseCategory,\n  IncomeAnalysis,\n} from \"~/components/admin\";\nimport { BalanceStatistics, LastTransaction } from \"./components\";\n// models\nimport {\n  getExpenseAnalysisData,\n  getExpenseByCategory,\n  getExpenseDataForYearChart,\n  getIncomeAnalysisData,\n  getIncomeDataForYearChart,\n} from \"~/models/transaction.server\";\n//\nimport { prisma } from \"~/db.server\";\n\nexport const meta: V2_MetaFunction = () => [\n  { title: \"Statistics | Remix Template\" },\n];\n\nexport async function loader() {\n  const recentTransactions = await prisma.transaction.findMany({\n    take: 4,\n    orderBy: { createdAt: \"desc\" },\n    include: { company: true, contact: true },\n  });\n  const expenseByIndustryPercentage = await getExpenseByCategory();\n  const incomeAnalysisData = await getIncomeAnalysisData();\n  const incomeDataForYearChart = await getIncomeDataForYearChart();\n  const expenseAnalysisData = await getExpenseAnalysisData();\n  const expenseDataForYearChart = await getExpenseDataForYearChart();\n\n  return json({\n    recentTransactions,\n    incomeAnalysisData,\n    expenseAnalysisData,\n    incomeDataForYearChart,\n    expenseDataForYearChart,\n    expenseByIndustryPercentage,\n  });\n}\n\nexport default function _route() {\n  const {\n    incomeAnalysisData,\n    expenseAnalysisData,\n    incomeDataForYearChart,\n    expenseDataForYearChart,\n    expenseByIndustryPercentage,\n  } = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"flex h-auto w-full flex-col gap-5 lg:flex-col\">\n      <div className=\"grid grid-cols-1 gap-5 lg:grid-cols-4\">\n        <div className=\"lg:col-span-1\">\n          <ClientOnly\n            fallback={\n              <div className=\"flex h-80 w-full items-center justify-center rounded-2xl bg-white\">\n                <p>Loading</p>\n              </div>\n            }\n          >\n            {() => (\n              <IncomeAnalysis\n                chartHeight={220}\n                incomeAnalysisData={incomeAnalysisData}\n                incomeDataForYearChart={incomeDataForYearChart}\n              />\n            )}\n          </ClientOnly>\n        </div>\n        <div className=\"lg:col-span-1\">\n          <ClientOnly\n            fallback={\n              <div className=\"flex h-80 w-full items-center justify-center rounded-2xl bg-white\">\n                <p>Loading</p>\n              </div>\n            }\n          >\n            {() => (\n              <ExpenseAnalysis\n                chartHeight={220}\n                expenseAnalysisData={expenseAnalysisData}\n                expenseDataForYearChart={expenseDataForYearChart}\n              />\n            )}\n          </ClientOnly>\n        </div>\n        <div className=\"lg:col-span-2\">\n          <ClientOnly\n            fallback={\n              <div className=\"flex h-80 w-full items-center justify-center rounded-2xl bg-white\">\n                <p>Loading</p>\n              </div>\n            }\n          >\n            {() => (\n              <BalanceStatistics\n                incomeDataForYearChart={incomeDataForYearChart}\n              />\n            )}\n          </ClientOnly>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 gap-5 lg:grid-cols-2\">\n        <div>\n          <ClientOnly\n            fallback={\n              <div className=\"flex h-72 w-full items-center justify-center rounded-2xl bg-white\">\n                <p>Loading</p>\n              </div>\n            }\n          >\n            {() => (\n              <ExpenseCategory\n                expenseByIndustryPercentage={expenseByIndustryPercentage}\n              />\n            )}\n          </ClientOnly>\n        </div>\n\n        <LastTransaction />\n      </div>\n    </div>\n  );\n}\n", "import { Link, useLoaderData } from \"@remix-run/react\";\n// components\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n  Badge,\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  ScrollArea,\n  ScrollBar,\n} from \"~/components/ui\";\nimport { InfoTooltip } from \"~/components/admin\";\n// utils\nimport { cn } from \"~/utils/cn\";\nimport { formatCurrency } from \"~/utils/formatNumber\";\nimport { getStatusColor } from \"~/utils/getStatusColor\";\nimport { formatDate, formatTime } from \"~/utils/formatDate\";\n//\nimport type { loader } from \"../_route\";\nimport type { Status } from \"~/types/status\";\n\nexport default function LastTransaction() {\n  const { recentTransactions } = useLoaderData<typeof loader>();\n\n  return (\n    <Card className=\"h-min space-y-4\">\n      <CardHeader className=\"flex-row items-center justify-between\">\n        <CardTitle className=\"flex items-center gap-2\">\n          <span>Last transaction</span>\n          <InfoTooltip message=\"Your last Activity\" />\n        </CardTitle>\n\n        <Link\n          to=\"/dashboard/overview/transactions\"\n          className=\"group flex items-center text-sm text-secondary-300 duration-200 hover:text-secondary-500\"\n        >\n          See more\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"14\"\n            height=\"15\"\n            viewBox=\"0 0 14 15\"\n            fill=\"none\"\n            className=\"ml-1.5 stroke-secondary-300 group-hover:stroke-secondary-500\"\n          >\n            <path\n              d=\"M8.41797 3.95898L11.9588 7.49982L8.41797 11.0407\"\n              strokeWidth=\"1.5\"\n              strokeMiterlimit=\"10\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M2.04199 7.5H11.8595\"\n              strokeWidth=\"1.5\"\n              strokeMiterlimit=\"10\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        </Link>\n      </CardHeader>\n\n      <CardContent>\n        <ScrollArea className=\"lg:h-[198px]\">\n          {recentTransactions.map((transaction) => (\n            <div\n              key={transaction.id}\n              className=\"flex items-center justify-between gap-4 py-4\"\n            >\n              <div className=\"flex flex-auto items-center  gap-4\">\n                <Avatar\n                  className={cn(\n                    transaction.contact?.avatar\n                      ? \"h-12 w-12\"\n                      : \"h-12 w-12 bg-[#F4F4F7] p-[14px]\"\n                  )}\n                >\n                  <AvatarImage\n                    src={\n                      transaction.contact?.avatar ?? transaction.company?.logo\n                    }\n                  />\n                  <AvatarFallback>\n                    {transaction.contact?.fullName ?? transaction.company?.name}\n                  </AvatarFallback>\n                </Avatar>\n                <div>\n                  <div className=\"text-base font-semibold\">\n                    {transaction.contact?.fullName ?? transaction.company?.name}\n                  </div>\n                  <div className=\"mt-1 text-sm font-medium capitalize text-secondary-300\">\n                    {transaction.company?.industry ?? \"Personal\"}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"w-24\">\n                <div className=\"pb-1 text-base font-semibold text-secondary-500\">\n                  {formatDate({ date: transaction.createdAt, type: \"short\" })}\n                </div>\n                <div className=\"text-sm font-medium text-secondary-300\">\n                  {formatTime(transaction.createdAt)}\n                </div>\n              </div>\n\n              <div className=\"w-28 pb-1 text-base font-semibold text-secondary-500\">\n                {transaction.type === \"Receive\"\n                  ? `+${formatCurrency(transaction.amount)}`\n                  : `-${formatCurrency(transaction.amount)}`}\n              </div>\n\n              <Badge\n                variant={getStatusColor(transaction.status) as Status}\n                size=\"lg\"\n              >\n                {transaction.status}\n              </Badge>\n            </div>\n          ))}\n\n          <ScrollBar orientation=\"horizontal\" className=\"md:hidden\" />\n        </ScrollArea>\n      </CardContent>\n    </Card>\n  );\n}\n", "import { merge } from \"lodash\";\nimport ReactApexChart from \"react-apexcharts\";\n// components\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  ScrollArea,\n  ScrollBar,\n} from \"~/components/ui\";\nimport { InfoTooltip } from \"~/components/admin\";\n\n// utils\nimport { formatCurrency } from \"~/utils/formatNumber\";\nimport { baseChartOption } from \"~/utils/baseChartOption\";\n//\nimport type { ApexOptions } from \"apexcharts\";\nimport type { SerializeFrom } from \"@remix-run/node\";\n\ntype IncomeAnalysisProps = {\n  incomeDataForYearChart: SerializeFrom<{ month: string; amount: number }[]>;\n};\n\nexport default function BalanceStatistics({\n  incomeDataForYearChart,\n}: IncomeAnalysisProps) {\n  const chartData = [\n    {\n      name: \"Income\",\n      data: incomeDataForYearChart.map((item) => item.amount),\n    },\n  ];\n\n  const chartCategories = incomeDataForYearChart.map((item) => item.month);\n\n  const chartOptions = merge(baseChartOption(), {\n    colors: [\"#31B099\"],\n    xaxis: {\n      categories: chartCategories,\n    },\n    tooltip: {\n      y: {\n        formatter: (val: number) => formatCurrency(val),\n      },\n    },\n    yaxis: {\n      labels: {\n        formatter: function (val: number) {\n          return formatCurrency(val);\n        },\n      },\n    },\n  }) as ApexOptions;\n\n  return (\n    <Card className=\"h-min space-y-4\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <span>Balance Statistics</span>\n          <InfoTooltip message=\"This year balance\" />\n        </CardTitle>\n      </CardHeader>\n\n      <CardContent>\n        <ScrollArea className=\"w-full\">\n          <div className=\"\">\n            <ReactApexChart\n              type=\"bar\"\n              series={chartData}\n              options={chartOptions}\n              height={300}\n            />\n          </div>\n          <ScrollBar orientation=\"horizontal\" />\n        </ScrollArea>\n      </CardContent>\n    </Card>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,kBAAqB;;;AC8BX;AAPK,SAAR,kBAAmC;AACxC,QAAM,EAAE,mBAAmB,IAAI,cAA6B;AAE5D,SACE,mDAAC,QAAK,WAAU,mBACd;AAAA,uDAAC,cAAW,WAAU,yCACpB;AAAA,yDAAC,aAAU,WAAU,2BACnB;AAAA,2DAAC,UAAK,gCAAN;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA,QACtB,mDAAC,eAAY,SAAQ,wBAArB;AAAA;AAAA;AAAA;AAAA,eAA0C;AAAA,WAF5C;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MAEA;AAAA,QAAC;AAAA;AAAA,UACC,IAAG;AAAA,UACH,WAAU;AAAA,UACX;AAAA;AAAA,YAEC;AAAA,cAAC;AAAA;AAAA,gBACC,OAAM;AAAA,gBACN,OAAM;AAAA,gBACN,QAAO;AAAA,gBACP,SAAQ;AAAA,gBACR,MAAK;AAAA,gBACL,WAAU;AAAA,gBAEV;AAAA;AAAA,oBAAC;AAAA;AAAA,sBACC,GAAE;AAAA,sBACF,aAAY;AAAA,sBACZ,kBAAiB;AAAA,sBACjB,eAAc;AAAA,sBACd,gBAAe;AAAA;AAAA,oBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMA;AAAA,kBACA;AAAA,oBAAC;AAAA;AAAA,sBACC,GAAE;AAAA,sBACF,aAAY;AAAA,sBACZ,kBAAiB;AAAA,sBACjB,eAAc;AAAA,sBACd,gBAAe;AAAA;AAAA,oBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAsBA;AAAA;AAAA;AAAA,QA3BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA4BA;AAAA,SAlCF;AAAA;AAAA;AAAA;AAAA,WAmCA;AAAA,IAEA,mDAAC,eACC,6DAAC,cAAW,WAAU,gBACnB;AAAA,yBAAmB,IAAI,CAAC,gBAAa;AApEhD;AAqEY;AAAA,UAAC;AAAA;AAAA,YAEC,WAAU;AAAA,YAEV;AAAA,iEAAC,SAAI,WAAU,sCACb;AAAA;AAAA,kBAAC;AAAA;AAAA,oBACC,WAAW;AAAA,wBACT,iBAAY,YAAZ,mBAAqB,UACjB,cACA;AAAA,oBACN;AAAA,oBAEA;AAAA;AAAA,wBAAC;AAAA;AAAA,0BACC,MACE,uBAAY,YAAZ,mBAAqB,WAArB,aAA+B,iBAAY,YAAZ,mBAAqB;AAAA;AAAA,wBAFxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIA;AAAA,sBACA,mDAAC,kBACE,kCAAY,YAAZ,mBAAqB,aAArB,aAAiC,iBAAY,YAAZ,mBAAqB,QADzD;AAAA;AAAA;AAAA;AAAA,6BAEA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAeA;AAAA,gBACA,mDAAC,SACC;AAAA,qEAAC,SAAI,WAAU,2BACZ,kCAAY,YAAZ,mBAAqB,aAArB,aAAiC,iBAAY,YAAZ,mBAAqB,QADzD;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA,kBACA,mDAAC,SAAI,WAAU,0DACZ,kCAAY,YAAZ,mBAAqB,aAArB,YAAiC,cADpC;AAAA;AAAA;AAAA;AAAA,yBAEA;AAAA,qBANF;AAAA;AAAA;AAAA;AAAA,uBAOA;AAAA,mBAxBF;AAAA;AAAA;AAAA;AAAA,qBAyBA;AAAA,cAEA,mDAAC,SAAI,WAAU,QACb;AAAA,mEAAC,SAAI,WAAU,mDACZ,qBAAW,EAAE,MAAM,YAAY,WAAW,MAAM,QAAQ,CAAC,KAD5D;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,gBACA,mDAAC,SAAI,WAAU,0CACZ,qBAAW,YAAY,SAAS,KADnC;AAAA;AAAA;AAAA;AAAA,uBAEA;AAAA,mBANF;AAAA;AAAA;AAAA;AAAA,qBAOA;AAAA,cAEA,mDAAC,SAAI,WAAU,wDACZ,sBAAY,SAAS,YAClB,IAAI,eAAe,YAAY,MAAM,MACrC,IAAI,eAAe,YAAY,MAAM,OAH3C;AAAA;AAAA;AAAA;AAAA,qBAIA;AAAA,cAEA;AAAA,gBAAC;AAAA;AAAA,kBACC,SAAS,eAAe,YAAY,MAAM;AAAA,kBAC1C,MAAK;AAAA,kBAEJ,sBAAY;AAAA;AAAA,gBAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAKA;AAAA;AAAA;AAAA,UAlDK,YAAY;AAAA,UADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAoDA;AAAA,OACD;AAAA,MAED,mDAAC,aAAU,aAAY,cAAa,WAAU,eAA9C;AAAA;AAAA;AAAA;AAAA,aAA0D;AAAA,SAzD5D;AAAA;AAAA;AAAA;AAAA,WA0DA,KA3DF;AAAA;AAAA;AAAA;AAAA,WA4DA;AAAA,OAlGF;AAAA;AAAA;AAAA;AAAA,SAmGA;AAEJ;;;ACjIA,oBAAsB;AACtB,8BAA2B;AA0DjB,IAAAA,0BAAA;AAnCK,SAAR,kBAAmC;AAAA,EACxC;AACF,GAAwB;AACtB,QAAM,YAAY;AAAA,IAChB;AAAA,MACE,MAAM;AAAA,MACN,MAAM,uBAAuB,IAAI,CAAC,SAAS,KAAK,MAAM;AAAA,IACxD;AAAA,EACF;AAEA,QAAM,kBAAkB,uBAAuB,IAAI,CAAC,SAAS,KAAK,KAAK;AAEvE,QAAM,mBAAe,qBAAM,gBAAgB,GAAG;AAAA,IAC5C,QAAQ,CAAC,SAAS;AAAA,IAClB,OAAO;AAAA,MACL,YAAY;AAAA,IACd;AAAA,IACA,SAAS;AAAA,MACP,GAAG;AAAA,QACD,WAAW,CAAC,QAAgB,eAAe,GAAG;AAAA,MAChD;AAAA,IACF;AAAA,IACA,OAAO;AAAA,MACL,QAAQ;AAAA,QACN,WAAW,SAAU,KAAa;AAChC,iBAAO,eAAe,GAAG;AAAA,QAC3B;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;AAED,SACE,oDAAC,QAAK,WAAU,mBACd;AAAA,wDAAC,cACC,8DAAC,aAAU,WAAU,2BACnB;AAAA,0DAAC,UAAK,kCAAN;AAAA;AAAA;AAAA;AAAA,aAAwB;AAAA,MACxB,oDAAC,eAAY,SAAQ,uBAArB;AAAA;AAAA;AAAA;AAAA,aAAyC;AAAA,SAF3C;AAAA;AAAA;AAAA;AAAA,WAGA,KAJF;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IAEA,oDAAC,eACC,8DAAC,cAAW,WAAU,UACpB;AAAA,0DAAC,SAAI,WAAU,IACb;AAAA,QAAC,wBAAAC;AAAA,QAAA;AAAA,UACC,MAAK;AAAA,UACL,QAAQ;AAAA,UACR,SAAS;AAAA,UACT,QAAQ;AAAA;AAAA,QAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,KANF;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,MACA,oDAAC,aAAU,aAAY,gBAAvB;AAAA;AAAA;AAAA;AAAA,aAAoC;AAAA,SATtC;AAAA;AAAA;AAAA;AAAA,WAUA,KAXF;AAAA;AAAA;AAAA;AAAA,WAYA;AAAA,OApBF;AAAA;AAAA;AAAA;AAAA,SAqBA;AAEJ;;;AFnEA,yBAMO;AAEP,gBAAuB;AA4CP,IAAAC,0BAAA;AA1CT,IAAM,OAAwB,MAAM;AAAA,EACzC,EAAE,OAAO,8BAA8B;AACzC;AAwBe,SAAR,SAA0B;AAC/B,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,cAA6B;AAEjC,SACE,oDAAC,SAAI,WAAU,iDACb;AAAA,wDAAC,SAAI,WAAU,yCACb;AAAA,0DAAC,SAAI,WAAU,iBACb;AAAA,QAAC;AAAA;AAAA,UACC,UACE,oDAAC,SAAI,WAAU,qEACb,8DAAC,OAAE,uBAAH;AAAA;AAAA;AAAA;AAAA,iBAAU,KADZ;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UAGD,gBACC;AAAA,YAAC;AAAA;AAAA,cACC,aAAa;AAAA,cACb;AAAA,cACA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIA;AAAA;AAAA,QAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAcA,KAfF;AAAA;AAAA;AAAA;AAAA,aAgBA;AAAA,MACA,oDAAC,SAAI,WAAU,iBACb;AAAA,QAAC;AAAA;AAAA,UACC,UACE,oDAAC,SAAI,WAAU,qEACb,8DAAC,OAAE,uBAAH;AAAA;AAAA;AAAA;AAAA,iBAAU,KADZ;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UAGD,gBACC;AAAA,YAAC;AAAA;AAAA,cACC,aAAa;AAAA,cACb;AAAA,cACA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIA;AAAA;AAAA,QAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAcA,KAfF;AAAA;AAAA;AAAA;AAAA,aAgBA;AAAA,MACA,oDAAC,SAAI,WAAU,iBACb;AAAA,QAAC;AAAA;AAAA,UACC,UACE,oDAAC,SAAI,WAAU,qEACb,8DAAC,OAAE,uBAAH;AAAA;AAAA;AAAA;AAAA,iBAAU,KADZ;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UAGD,gBACC;AAAA,YAAC;AAAA;AAAA,cACC;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEA;AAAA;AAAA,QAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYA,KAbF;AAAA;AAAA;AAAA;AAAA,aAcA;AAAA,SAjDF;AAAA;AAAA;AAAA;AAAA,WAkDA;AAAA,IAEA,oDAAC,SAAI,WAAU,yCACb;AAAA,0DAAC,SACC;AAAA,QAAC;AAAA;AAAA,UACC,UACE,oDAAC,SAAI,WAAU,qEACb,8DAAC,OAAE,uBAAH;AAAA;AAAA;AAAA;AAAA,iBAAU,KADZ;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UAGD,gBACC;AAAA,YAAC;AAAA;AAAA,cACC;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAEA;AAAA;AAAA,QAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYA,KAbF;AAAA;AAAA;AAAA;AAAA,aAcA;AAAA,MAEA,oDAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,aAAiB;AAAA,SAjBnB;AAAA;AAAA;AAAA;AAAA,WAkBA;AAAA,OAvEF;AAAA;AAAA;AAAA;AAAA,SAwEA;AAEJ;",
  "names": ["import_jsx_dev_runtime", "ReactApexChart", "import_jsx_dev_runtime"]
}
