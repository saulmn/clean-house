{
  "version": 3,
  "sources": ["../../../../../../app/routes/dashboard/overview/_index/_route.tsx", "../../../../../../app/routes/dashboard/overview/_index/components/PockedPlans.tsx", "../../../../../../app/routes/dashboard/overview/_index/components/RecentActivity.tsx"],
  "sourcesContent": ["import type { V2_MetaFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { ClientOnly } from \"remix-utils\";\nimport { useLoaderData } from \"@remix-run/react\";\n// components\nimport { PockedPlans, RecentActivity } from \"./components\";\nimport {\n  Currency,\n  ExpenseAnalysis,\n  ExpenseCategory,\n  IncomeAnalysis,\n  TotalBalance,\n} from \"~/components/admin\";\n// models\nimport {\n  getExpenseAnalysisData,\n  getExpenseByCategory,\n  getExpenseDataForYearChart,\n  getIncomeAnalysisData,\n  getIncomeDataForYearChart,\n} from \"~/models/transaction.server\";\nimport { getContacts } from \"~/models/contact.server\";\n//\nimport { prisma } from \"~/db.server\";\n\nexport const meta: V2_MetaFunction = () => [\n  { title: \"Dashboard | Remix Template\" },\n];\n\nexport async function loader() {\n  const recentTransactions = await prisma.transaction.findMany({\n    take: 4,\n    orderBy: { createdAt: \"desc\" },\n    include: { company: true, contact: true },\n  });\n  const contacts = await getContacts();\n  const expenseByIndustryPercentage = await getExpenseByCategory();\n  const incomeAnalysisData = await getIncomeAnalysisData();\n  const incomeDataForYearChart = await getIncomeDataForYearChart();\n  const expenseAnalysisData = await getExpenseAnalysisData();\n  const expenseDataForYearChart = await getExpenseDataForYearChart();\n\n  return json({\n    contacts,\n    incomeAnalysisData,\n    recentTransactions,\n    expenseAnalysisData,\n    incomeDataForYearChart,\n    expenseDataForYearChart,\n    expenseByIndustryPercentage,\n  });\n}\n\nexport default function _route() {\n  const {\n    contacts,\n    incomeAnalysisData,\n    expenseAnalysisData,\n    incomeDataForYearChart,\n    expenseDataForYearChart,\n    expenseByIndustryPercentage,\n  } = useLoaderData<typeof loader>();\n  return (\n    <div className=\"flex h-auto w-full flex-col gap-5 lg:flex-row\">\n      <div className=\"flex h-full w-full flex-col gap-5 lg:w-[29%]\">\n        <TotalBalance contacts={contacts} />\n\n        <PockedPlans />\n      </div>\n\n      <div className=\"flex flex-col gap-5 lg:w-[42%]\">\n        <div>\n          <ClientOnly\n            fallback={\n              <div className=\"flex h-72 w-full items-center justify-center rounded-2xl bg-white\">\n                <p>Loading</p>\n              </div>\n            }\n          >\n            {() => (\n              <ExpenseCategory\n                expenseByIndustryPercentage={expenseByIndustryPercentage}\n              />\n            )}\n          </ClientOnly>\n        </div>\n\n        <div className=\"grid grid-cols-1 gap-5 lg:grid-cols-2\">\n          <div className=\"col-span-1\">\n            <ClientOnly\n              fallback={\n                <div className=\"flex h-80 w-full items-center justify-center rounded-2xl bg-white\">\n                  <p>Loading</p>\n                </div>\n              }\n            >\n              {() => (\n                <IncomeAnalysis\n                  chartHeight={155}\n                  incomeAnalysisData={incomeAnalysisData}\n                  incomeDataForYearChart={incomeDataForYearChart}\n                />\n              )}\n            </ClientOnly>\n          </div>\n\n          <div className=\"col-span-1\">\n            <ClientOnly\n              fallback={\n                <div className=\"flex h-80 w-full items-center justify-center rounded-2xl bg-white\">\n                  <p>Loading</p>\n                </div>\n              }\n            >\n              {() => (\n                <ExpenseAnalysis\n                  chartHeight={155}\n                  expenseAnalysisData={expenseAnalysisData}\n                  expenseDataForYearChart={expenseDataForYearChart}\n                />\n              )}\n            </ClientOnly>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex h-full w-full flex-col gap-5 lg:w-[29%]\">\n        <RecentActivity />\n\n        <Currency all={false} />\n      </div>\n    </div>\n  );\n}\n", "import { Link } from \"@remix-run/react\";\n// components\nimport { InfoTooltip } from \"~/components/admin\";\nimport {\n  Card,\n  CardContent,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n  Paragraph,\n} from \"~/components/ui\";\n\nexport default function PockedPlans() {\n  return (\n    <Card className=\"h-full space-y-4\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <span>My Pocked Plans</span>\n          <InfoTooltip message=\"Savings plans\" />\n        </CardTitle>\n      </CardHeader>\n\n      <CardContent className=\"grid grid-cols-2 gap-4\">\n        {PLANS.map((item) => (\n          <div\n            className=\"col-span-1 space-y-5 rounded-xl border border-secondary-200 p-5\"\n            key={item.name}\n          >\n            <div className=\"flex h-10 w-10 items-center justify-center rounded-md bg-secondary-100\">\n              <img src={item.img} alt={item.name} />\n            </div>\n\n            <div>\n              <Paragraph\n                variant=\"body2\"\n                className=\"pb-[1px] font-semibold text-secondary-500\"\n              >\n                {item.name}\n              </Paragraph>\n              <Paragraph\n                variant=\"body3\"\n                className=\"font-semibold text-secondary-300\"\n              >\n                {item.amount}\n              </Paragraph>\n            </div>\n          </div>\n        ))}{\" \"}\n      </CardContent>\n\n      <CardFooter className=\"flex justify-center\">\n        <Link\n          to=\"\"\n          preventScrollReset\n          className=\"group flex items-center text-sm text-secondary-300 duration-200 hover:text-secondary-500\"\n        >\n          See more\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"14\"\n            height=\"15\"\n            viewBox=\"0 0 14 15\"\n            fill=\"none\"\n            className=\"ml-1.5 rotate-90 stroke-secondary-300 group-hover:stroke-secondary-500\"\n          >\n            <path\n              d=\"M8.41797 3.95898L11.9588 7.49982L8.41797 11.0407\"\n              strokeWidth=\"1.5\"\n              strokeMiterlimit=\"10\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M2.04199 7.5H11.8595\"\n              strokeWidth=\"1.5\"\n              strokeMiterlimit=\"10\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        </Link>\n      </CardFooter>\n    </Card>\n  );\n}\n\nconst PLANS = [\n  {\n    name: \"New Car\",\n    amount: 8000,\n    img: \"/images/car.png\",\n  },\n  {\n    name: \"New Console\",\n    amount: 2050,\n    img: \"/images/console.png\",\n  },\n  {\n    name: \"Savings \",\n    amount: 34100,\n    img: \"/images/savings.png\",\n  },\n  {\n    name: \"Shopping\",\n    amount: 100000,\n    img: \"/images/shopping.png\",\n  },\n];\n", "import { Link, useLoaderData } from \"@remix-run/react\";\n// components\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n} from \"~/components/ui\";\nimport { InfoTooltip } from \"~/components/admin\";\n// utils\nimport { formatCurrency } from \"~/utils/formatNumber\";\nimport { formatDate } from \"~/utils/formatDate\";\n//\nimport type { loader } from \"../_route\";\nimport { cn } from \"~/utils/cn\";\n\nexport default function RecentActivity() {\n  const { recentTransactions } = useLoaderData<typeof loader>();\n\n  return (\n    <Card className=\"h-min space-y-4\">\n      <CardHeader className=\"flex-row items-center justify-between\">\n        <CardTitle className=\"flex items-center gap-2\">\n          <span>Recent Activity</span>\n          <InfoTooltip message=\"Your Recent Activity\" />\n        </CardTitle>\n\n        <Link\n          to=\"/dashboard/overview/transactions\"\n          className=\"group flex items-center text-sm text-secondary-300 duration-200 hover:text-secondary-500\"\n        >\n          See more\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"14\"\n            height=\"15\"\n            viewBox=\"0 0 14 15\"\n            fill=\"none\"\n            className=\"ml-1.5 stroke-secondary-300 group-hover:stroke-secondary-500\"\n          >\n            <path\n              d=\"M8.41797 3.95898L11.9588 7.49982L8.41797 11.0407\"\n              strokeWidth=\"1.5\"\n              strokeMiterlimit=\"10\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M2.04199 7.5H11.8595\"\n              strokeWidth=\"1.5\"\n              strokeMiterlimit=\"10\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        </Link>\n      </CardHeader>\n\n      <CardContent className=\"space-y-8\">\n        {recentTransactions.map((transaction) => (\n          <div\n            key={transaction.id}\n            className=\"flex items-center justify-between gap-4\"\n          >\n            <div className=\"flex items-center gap-4\">\n              <Avatar\n                className={cn(\n                  transaction.contact?.avatar\n                    ? \"h-12 w-12\"\n                    : \"h-12 w-12 bg-[#F4F4F7] p-[14px]\"\n                )}\n              >\n                <AvatarImage\n                  src={transaction.contact?.avatar ?? transaction.company?.logo}\n                />\n                <AvatarFallback>\n                  {transaction.contact?.fullName ?? transaction.company?.name}\n                </AvatarFallback>\n              </Avatar>\n              <div>\n                <div className=\"text-base font-semibold\">\n                  {transaction.contact?.fullName ?? transaction.company?.name}\n                </div>\n                <div className=\"mt-1 text-sm font-medium capitalize text-secondary-300\">\n                  {transaction.company?.industry ?? \"Personal\"}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"text-end\">\n              <div className=\"text-base font-semibold\">\n                {transaction.type === \"Receive\"\n                  ? `+${formatCurrency(transaction.amount)}`\n                  : `-${formatCurrency(transaction.amount)}`}\n              </div>\n              <div className=\"mt-1 whitespace-nowrap text-sm font-medium capitalize text-secondary-300\">\n                {formatDate({ date: transaction.createdAt, type: \"short\" })}\n              </div>\n            </div>\n          </div>\n        ))}\n      </CardContent>\n    </Card>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "import_jsx_dev_runtime"]
}
