{
  "version": 3,
  "sources": ["../../../../../../app/routes/dashboard/wallets/card.$cardId.details/_route.tsx", "../../../../../../app/routes/dashboard/wallets/card.$cardId.details/components/CardForm.tsx", "../../../../../../app/routes/dashboard/wallets/card.$cardId.details/components/CardDesign.tsx"],
  "sourcesContent": ["import { json, redirect } from \"@remix-run/node\";\nimport type { ActionArgs, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\nimport { z } from \"zod\";\nimport { parse } from \"@conform-to/zod\";\n// components\nimport { Breadcrumb, Container } from \"~/components/ui\";\nimport { CardForm } from \"./components\";\n//\nimport { prisma } from \"~/db.server\";\nimport { requireUserId } from \"~/session.server\";\nimport { updateUserBalance } from \"~/models/user.server\";\n\nexport const meta: V2_MetaFunction = () => [\n  { title: \"Card details | Remix Template\" },\n];\n\nexport async function loader({ request, params }: LoaderArgs) {\n  invariant(params.cardId, \"Card id should be defined\");\n\n  const card = await prisma.card.findUnique({\n    where: { id: params.cardId },\n  });\n\n  if (!card) throw new Response(\"Card not found\", { status: 404 });\n\n  return json({ cardInfo: card });\n}\n\nexport const editCardSchema = z.object({\n  name: z.string({ required_error: \"Card holder name is required\" }),\n  number: z.string({ required_error: \"Card number is required\" }),\n  expiry: z.string().regex(/^(0[1-9]|1[0-2])\\/?([0-9]{4}|[0-9]{2})$/),\n  cvc: z.string().regex(/^[0-9]{3,4}$/),\n  amount: z.number(),\n});\n\nexport async function action({ request, params }: ActionArgs) {\n  invariant(params.cardId, \"Card id should be defined\");\n\n  const formData = await request.formData();\n  const submission = parse(formData, { schema: editCardSchema });\n\n  if (!submission.value || submission.intent !== \"submit\") {\n    return json(submission, { status: 400 });\n  }\n\n  const userId = await requireUserId(request);\n\n  const currentCardAmount = await prisma.card.findUnique({\n    where: { id: params.cardId },\n    select: { amount: true },\n  });\n\n  if (!currentCardAmount) throw new Response(\"Card not found\", { status: 404 });\n\n  await updateUserBalance({\n    userId,\n    amount: -currentCardAmount.amount,\n    type: \"Receive\",\n  });\n\n  const card = await prisma.card.update({\n    where: {\n      id: params.cardId,\n    },\n    data: {\n      ...submission.value,\n      userId: userId,\n    },\n  });\n\n  await updateUserBalance({ userId, amount: card.amount, type: \"Receive\" });\n\n  return redirect(\"/dashboard/wallets\");\n}\n\nexport default function _route() {\n  return (\n    <>\n      <div className=\"w-screen bg-[#1C2634]\">\n        <Container className=\"pb-40 pt-28 lg:px-0\">\n          <Breadcrumb\n            heading=\"Wallets\"\n            links={[\n              { name: \"Dashboard\", href: \"/dashboard/overview\" },\n              { name: \"Wallets\", href: \"/dashboard/wallets\" },\n              { name: \"Card details\", href: \"\" },\n            ]}\n          />\n        </Container>\n      </div>\n\n      <Container className=\"relative -top-32  h-auto w-full  lg:px-0\">\n        <CardForm />\n      </Container>\n    </>\n  );\n}\n", "import {\n  Form,\n  Link,\n  useActionData,\n  useLoaderData,\n  useNavigation,\n} from \"@remix-run/react\";\nimport { conform, useForm } from \"@conform-to/react\";\nimport { parse } from \"@conform-to/zod\";\nimport { useId, useState } from \"react\";\nimport type { z } from \"zod\";\nimport type { Focused } from \"react-credit-cards-2\";\n// components\nimport {\n  Button,\n  Card as CardComponent,\n  CardContent,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n  Input,\n  buttonVariants,\n} from \"~/components/ui\";\nimport CardDesign from \"./CardDesign\";\nimport { InfoTooltip } from \"~/components/admin\";\n// utils\nimport {\n  formatCVC,\n  formatCreditCardNumber,\n  formatExpirationDate,\n} from \"~/utils/payment\";\nimport type { CardData } from \"~/utils/payment\";\n//\nimport type { action, loader } from \"../_route\";\nimport { editCardSchema } from \"../_route\";\nimport { Loader2 } from \"lucide-react\";\n\nexport default function CardForm() {\n  const id = useId();\n  const { cardInfo } = useLoaderData<typeof loader>();\n  const [card, setCard] = useState<CardData>({\n    name: cardInfo.name,\n    number: cardInfo.number,\n    expiry: cardInfo.expiry,\n    cvc: cardInfo.cvc,\n    issuer: \"\",\n    focused: \"\",\n  });\n  const actionData = useActionData<typeof action>();\n  const navigation = useNavigation();\n  const [form, fieldset] = useForm<z.input<typeof editCardSchema>>({\n    lastSubmission: actionData,\n    id,\n    shouldValidate: \"onBlur\",\n    onValidate({ formData }) {\n      return parse(formData, { schema: editCardSchema });\n    },\n    defaultValue: {\n      name: cardInfo.name,\n      number: cardInfo.number,\n      expiry: cardInfo.expiry,\n      cvc: cardInfo.cvc,\n      amount: cardInfo.amount,\n    },\n  });\n\n  const handleCallback = ({ issuer }: { issuer: string }, isValid: boolean) => {\n    if (isValid) {\n      setCard({ ...card, issuer });\n    }\n  };\n\n  const handleInputFocus = ({ target }: { target: HTMLInputElement }) => {\n    setCard({ ...card, focused: target.name as Focused });\n  };\n\n  const handleInputChange = ({ target }: { target: HTMLInputElement }) => {\n    if (target.name === \"number\") {\n      target.value = formatCreditCardNumber(target.value);\n    } else if (target.name === \"expiry\") {\n      target.value = formatExpirationDate(target.value);\n    } else if (target.name === \"cvc\") {\n      target.value = formatCVC(target.value);\n    }\n\n    setCard({ ...card, [target.name]: target.value });\n  };\n\n  return (\n    <div className=\"flex flex-col gap-5 lg:flex-row\">\n      <CardComponent className=\"h-min basis-full space-y-4 lg:basis-10/12\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <span>Card details</span>\n            <InfoTooltip message=\"Edit your card details\" />\n          </CardTitle>\n        </CardHeader>\n\n        <Form method=\"PUT\" className=\"mx-auto w-full\" {...form.props}>\n          <fieldset\n            className=\"w-full space-y-3 disabled:opacity-70\"\n            disabled={navigation.state !== \"idle\"}\n          >\n            <CardContent className=\"space-y-6\">\n              <Input\n                label=\"Name on card\"\n                placeholder=\"Email\"\n                value={card.name}\n                onChange={handleInputChange}\n                onFocus={handleInputFocus}\n                error={fieldset.name.error}\n                {...conform.input(fieldset.name)}\n              />\n\n              <Input\n                label=\"Card number\"\n                placeholder=\"Card Number\"\n                value={card.number}\n                onChange={handleInputChange}\n                onFocus={handleInputFocus}\n                error={fieldset.number.error}\n                {...conform.input(fieldset.number)}\n              />\n\n              <div className=\"flex w-full flex-col gap-5 md:flex-row\">\n                <div className=\"w-full\">\n                  <Input\n                    label=\"Expiry Date\"\n                    placeholder=\"Expiry Date\"\n                    value={card.expiry}\n                    onChange={handleInputChange}\n                    onFocus={handleInputFocus}\n                    error={fieldset.expiry.error}\n                    {...conform.input(fieldset.expiry, {\n                      type: \"tel\",\n                    })}\n                  />\n                </div>\n\n                <div className=\"w-full\">\n                  <Input\n                    label=\"CVC/CVV\"\n                    placeholder=\"CVC/CVV\"\n                    value={card.cvc}\n                    onChange={handleInputChange}\n                    onFocus={handleInputFocus}\n                    error={fieldset.cvc.error}\n                    {...conform.input(fieldset.cvc, {\n                      type: \"tel\",\n                    })}\n                  />\n                </div>\n              </div>\n\n              <Input\n                label=\"Amount\"\n                placeholder=\"Card amount\"\n                error={fieldset.amount.error}\n                {...conform.input(fieldset.amount, {\n                  type: \"number\",\n                })}\n              />\n            </CardContent>\n\n            <CardFooter className=\"gap-4 pt-5\">\n              <Link\n                to=\"/dashboard/wallets\"\n                className={buttonVariants({ variant: \"outline\", size: \"lg\" })}\n              >\n                Go back\n              </Link>\n              <Button size=\"lg\">\n                {navigation.state !== \"idle\" ? (\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                ) : (\n                  \"Save\"\n                )}\n              </Button>\n            </CardFooter>\n          </fieldset>\n        </Form>\n      </CardComponent>\n\n      <CardDesign card={card} handleCallback={handleCallback} />\n    </div>\n  );\n}\n", "import type { CallbackArgument } from \"react-credit-cards-2\";\nimport Card from \"react-credit-cards-2\";\n// components\nimport {\n  Card as CardComponent,\n  CardContent,\n  CardHeader,\n  CardTitle,\n} from \"~/components/ui\";\nimport { InfoTooltip } from \"~/components/admin\";\n//\nimport type { CardData } from \"~/utils/payment\";\n\ntype CardDesignProps = {\n  card: CardData;\n  handleCallback:\n    | ((type: CallbackArgument, isValid: boolean) => void)\n    | undefined;\n};\n\nexport default function CardDesign({ card, handleCallback }: CardDesignProps) {\n  return (\n    <CardComponent className=\"h-min basis-full space-y-4 lg:basis-2/12\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <span>Card Design</span>\n          <InfoTooltip message=\"Your card design\" />\n        </CardTitle>\n      </CardHeader>\n\n      <CardContent>\n        <Card\n          name={card.name}\n          number={card.number}\n          expiry={card.expiry}\n          cvc={card.cvc}\n          callback={handleCallback}\n        />\n      </CardContent>\n    </CardComponent>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime"]
}
