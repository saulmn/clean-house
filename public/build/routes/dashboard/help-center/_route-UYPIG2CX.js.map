{
  "version": 3,
  "sources": ["../../../../../app/routes/dashboard/help-center/_route.tsx", "../../../../../app/routes/dashboard/help-center/components/QuestionCard.tsx", "../../../../../app/routes/dashboard/help-center/components/NotFundQuestion.tsx", "../../../../../app/routes/dashboard/help-center/components/SearchCard.tsx"],
  "sourcesContent": ["import { json } from \"@remix-run/node\";\nimport type { V2_MetaFunction, LoaderArgs } from \"@remix-run/node\";\n// components\nimport { Breadcrumb, Container } from \"~/components/ui\";\nimport { SearchCard } from \"./components\";\n//\nimport { prisma } from \"~/db.server\";\n\nexport const meta: V2_MetaFunction = () => [\n  { title: \"Help center | Remix Template\" },\n];\n\nexport async function loader({ request }: LoaderArgs) {\n  let url = new URL(request.url);\n  let query = url.searchParams.get(\"query\");\n\n  if (query) {\n    const faqs = await prisma.faq.findMany({\n      where: {\n        question: {\n          contains: query.toLowerCase(),\n          mode: \"insensitive\",\n        },\n      },\n    });\n\n    return json({ faqs });\n  }\n\n  const faqs = await prisma.faq.findMany({});\n\n  return json({ faqs });\n}\n\nexport default function _route() {\n  return (\n    <>\n      <div className=\"w-screen bg-[#1C2634]\">\n        <Container className=\"pb-40 pt-28 xl:px-0\">\n          <Breadcrumb\n            heading=\"Help Center\"\n            links={[\n              { name: \"Dashboard\", href: \"/dashboard/overview\" },\n              { name: \"Help Center\", href: \"\" },\n            ]}\n          />\n        </Container>\n      </div>\n\n      <Container className=\"relative -top-32  h-auto w-full xl:px-0\">\n        <SearchCard />\n      </Container>\n    </>\n  );\n}\n", "import { useState } from \"react\";\nimport {\n  Button,\n  Heading,\n  Paragraph,\n  ScrollArea,\n  ScrollBar,\n} from \"~/components/ui\";\n// utils\nimport { cn } from \"~/utils/cn\";\n\ntype QuestionProps = {\n  item: {\n    question: string;\n    answer: string;\n    likes: number;\n    tags: string[];\n  };\n};\n\nexport default function QuestionCard({ item }: QuestionProps) {\n  const [like, setLike] = useState(false);\n\n  return (\n    <div className=\"flex flex-col gap-2 rounded-[20px] border border-secondary-200 p-6\">\n      <div className=\"pb-8\">\n        <Heading variant=\"h6\" className=\"pb-4 text-lg font-semibold lg:text-lg\">\n          {item.question}\n        </Heading>\n        <Paragraph variant=\"body3\" className=\"text-secondary-300\">\n          {item.answer}\n        </Paragraph>\n      </div>\n\n      <div className=\"flex items-center justify-between gap-5\">\n        <ScrollArea className=\"flex whitespace-nowrap\">\n          {item.tags.map((topic, index) => (\n            <Button\n              variant=\"outline\"\n              key={index}\n              className=\"mr-1.5 inline-block\"\n            >\n              {topic}\n            </Button>\n          ))}\n\n          <ScrollBar orientation=\"horizontal\" className=\"md:hidden\" />\n        </ScrollArea>\n\n        <button\n          onClick={() => setLike(!like)}\n          className={cn(\n            like\n              ? \"fill-primary-500 stroke-primary-500 text-primary-500\"\n              : \"fill-none stroke-secondary-500 text-secondary-500\",\n            \"flex items-center gap-2 font-semibold\"\n          )}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              d=\"M7.48047 18.3505L10.5805 20.7505C10.9805 21.1505 11.8805 21.3505 12.4805 21.3505H16.2805C17.4805 21.3505 18.7805 20.4505 19.0805 19.2505L21.4805 11.9505C21.9805 10.5505 21.0805 9.35046 19.5805 9.35046H15.5805C14.9805 9.35046 14.4805 8.85046 14.5805 8.15046L15.0805 4.95046C15.2805 4.05046 14.6805 3.05046 13.7805 2.75046C12.9805 2.45046 11.9805 2.85046 11.5805 3.45046L7.48047 9.55046\"\n              strokeWidth=\"1.5\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n            <path\n              d=\"M2.37988 18.3504V8.55039C2.37988 7.15039 2.97988 6.65039 4.37988 6.65039H5.37988C6.77988 6.65039 7.37988 7.15039 7.37988 8.55039V18.3504C7.37988 19.7504 6.77988 20.2504 5.37988 20.2504H4.37988C2.97988 20.2504 2.37988 19.7504 2.37988 18.3504Z\"\n              strokeWidth=\"1.5\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </svg>\n          {like ? item.likes + 1 : item.likes}\n        </button>\n      </div>\n    </div>\n  );\n}\n", "import { Heading, Paragraph } from \"~/components/ui\";\n\nexport default function NotFundQuestion() {\n  return (\n    <div className=\"flex flex-col gap-2 rounded-[20px] border border-secondary-200 p-6\">\n      <div className=\"pb-8\">\n        <Heading variant=\"h6\" className=\"pb-4 text-lg font-semibold lg:text-lg\">\n          No results found\n        </Heading>\n        <Paragraph variant=\"body3\" className=\"text-secondary-300\">\n          Try adjusting your search or filter to find what you are looking for.\n        </Paragraph>\n      </div>\n    </div>\n  );\n}\n", "import { useFetcher, useLoaderData } from \"@remix-run/react\";\n// components\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n  Input,\n  Paragraph,\n  ScrollArea,\n  ScrollBar,\n} from \"~/components/ui\";\nimport QuestionCard from \"./QuestionCard\";\nimport { InfoTooltip } from \"~/components/admin\";\n//\nimport type { loader } from \"../_route\";\nimport NotFundQuestion from \"./NotFundQuestion\";\n\nexport default function SearchCard() {\n  const { faqs } = useLoaderData<typeof loader>();\n\n  const searchQuestionFetcher = useFetcher();\n  console.log(\"searchQuestionFetcher\", searchQuestionFetcher.data);\n\n  const data = searchQuestionFetcher.data\n    ? (searchQuestionFetcher.data.faqs as typeof faqs)\n    : faqs;\n  return (\n    <div className=\"flex flex-col gap-5 lg:flex-row\">\n      <Card className=\"h-min basis-full space-y-8 lg:sticky lg:top-24 lg:basis-4/12\">\n        <CardHeader>\n          <CardTitle>Hi, Can we help you ?</CardTitle>\n          <CardDescription>\n            Type your question or search by keyword here here\n          </CardDescription>\n        </CardHeader>\n\n        <CardContent>\n          <searchQuestionFetcher.Form method=\"GET\" className=\"relative w-full\">\n            <img\n              src=\"/icons/magnifying-glass.svg\"\n              alt=\"magnifying-glass\"\n              className=\"absolute left-3 top-1/2 -translate-y-1/2 transform\"\n            />\n            <Input\n              name=\"query\"\n              placeholder=\"Search here\"\n              className=\"w-full pl-12\"\n              onChange={(event) => {\n                searchQuestionFetcher.submit(\n                  { query: event.target.value },\n                  { method: \"GET\", action: \"/dashboard/help-center\" }\n                );\n              }}\n            />\n          </searchQuestionFetcher.Form>\n        </CardContent>\n\n        <CardFooter className=\"flex-col items-start \">\n          <Paragraph variant=\"body3\">Popular Search</Paragraph>\n\n          <ScrollArea className=\"flex w-full whitespace-nowrap pt-4\">\n            {[\"Transfer\", \"Change card\", \"Flow\"].map((topic, index) => (\n              <Button variant=\"outline\" key={index} className=\"mr-1.5\">\n                {topic}\n              </Button>\n            ))}\n\n            <ScrollBar orientation=\"horizontal\" className=\"md:hidden\" />\n          </ScrollArea>\n        </CardFooter>\n      </Card>\n\n      <Card className=\"basis-full space-y-8 lg:basis-8/12\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <span>Frequently Asked Questions</span>\n            <InfoTooltip message=\"All faqs\" />\n          </CardTitle>\n        </CardHeader>\n\n        <CardContent className=\"space-y-6 border-t border-secondary-100 py-8\">\n          {data.length ? (\n            data.map((item) => <QuestionCard key={item.question} item={item} />)\n          ) : (\n            <NotFundQuestion />\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime"]
}
