{
  "version": 3,
  "sources": ["../../../../../../app/routes/_client/resources/partner/components/Hero.tsx", "../../../../../../app/routes/_client/resources/partner/components/Benefit.tsx", "../../../../../../app/routes/_client/resources/partner/components/PartnerForm.tsx", "../../../../../../app/components/ui/accordion.tsx", "../../../../../../node_modules/@radix-ui/react-accordion/src/accordion.tsx", "../../../../../../node_modules/@radix-ui/react-collapsible/src/collapsible.tsx", "../../../../../../app/routes/_client/resources/partner/components/FAQ.tsx", "../../../../../../app/routes/_client/resources/partner/_route.tsx"],
  "sourcesContent": ["import { Link } from \"@remix-run/react\";\nimport { ArrowRight } from \"lucide-react\";\n// components\nimport { Container, Heading, Paragraph, buttonVariants } from \"~/components/ui\";\n// utils\nimport { cn } from \"~/utils/cn\";\nimport { BUY_URL } from \"~/utils/setting\";\n\nexport default function Hero() {\n  return (\n    <section className=\"bg-white pt-24 lg:pt-[68px]\">\n      <Container className=\"flex h-full basis-full flex-col items-center justify-between py-5 lg:flex-row\">\n        <div className=\"basis-1/2 lg:py-20\">\n          <div className=\"mb-5 max-w-fit rounded-full bg-[#F4F4F7] px-1.5 py-2 text-xs lg:text-sm\">\n            <span className=\"rounded-full bg-primary px-[5px] py-1 font-medium text-white\">\n              News!\n            </span>\n            <span className=\"pl-2 text-secondary-500\">\n              Update New features for active users \u2728\n            </span>\n          </div>\n\n          <Heading\n            variant=\"h1\"\n            className=\"mb-6 font-bold text-[#1B2632] lg:mb-8 lg:leading-tight lg:tracking-[-2.16px]\"\n          >\n            Let\u2019s become a Finlab partner.\n          </Heading>\n\n          <Paragraph variant=\"body1\" className=\"mb-6 lg:pb-10\">\n            Give your customers financial products you'll both love.\n          </Paragraph>\n\n          <div className=\"mb-10 flex gap-2 md:gap-4\">\n            <Link\n              to=\"/login\"\n              className={cn(\n                buttonVariants({ size: \"lg\" }),\n                \"flex items-center whitespace-nowrap px-7 md:px-8\"\n              )}\n            >\n              Live preview\n              <ArrowRight className=\"ml-2 inline-block\" size={16} />\n            </Link>\n\n            <Link\n              to={BUY_URL}\n              className={cn(\n                buttonVariants({ variant: \"outline\", size: \"lg\" }),\n                \"whitespace-nowrap px-7 md:px-8\"\n              )}\n              target=\"_blank\"\n            >\n              Purchase now\n            </Link>\n          </div>\n        </div>\n\n        <img\n          src=\"/images/partner-hero.png\"\n          alt=\"partner hero\"\n          className=\"w-full lg:h-[700px] lg:w-auto\"\n        />\n      </Container>\n    </section>\n  );\n}\n", "import { Container, Heading, Paragraph } from \"~/components/ui\";\n\nexport default function Benefit() {\n  return (\n    <section className=\"bg-white pb-10 pt-10 lg:pt-24\">\n      <Container>\n        <div className=\"mx-auto mb-3 w-fit rounded-full bg-[#F4F4F7] px-6 py-1.5 text-sm text-secondary-500\">\n          Benefit partnership with us \uD83C\uDF89\n        </div>\n\n        <Heading\n          variant=\"h2\"\n          className=\"pb-12 text-center font-bold leading-tight tracking-[-1.68px] text-[#1B2632]\"\n        >\n          Why partner with Finlab ?\n        </Heading>\n\n        <div className=\"grid grid-cols-1 gap-5 pb-14 lg:grid-cols-3\">\n          {PARTNER_BENEFITS.map((benefit) => (\n            <div\n              key={benefit.label}\n              className=\"space-y-5 rounded-[30px] border-2 border-secondary-200 bg-white p-8 duration-200 hover:border-transparent hover:shadow-[0px_34px_184px_-10px_rgba(0,0,0,0.06)]\"\n            >\n              <div>{benefit.icon}</div>\n\n              <Heading variant=\"h5\" className=\"pb-2 text-[28px] font-bold\">\n                {benefit.label}\n              </Heading>\n\n              <Paragraph variant=\"body1\" className=\"pb-10\">\n                {benefit.description}\n              </Paragraph>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"hidden md:block\">\n          <img\n            src=\"/images/partner-benefit.png\"\n            alt=\"partner benefit\"\n            className=\" w-full\"\n          />\n        </div>\n      </Container>\n    </section>\n  );\n}\n\nconst PARTNER_BENEFITS = [\n  {\n    label: \"Improve client experiences with the best financial products\",\n    description: \"Manage your clients with a single sign-in using pro access.\",\n    icon: (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"74\"\n        height=\"74\"\n        viewBox=\"0 0 74 74\"\n        fill=\"none\"\n      >\n        <path\n          d=\"M45.1954 33.5534V33.0534V10.8534C45.1954 9.59733 45.0244 8.63153 44.7414 7.94658C44.4594 7.26405 44.0847 6.89905 43.6889 6.75048C43.2929 6.60181 42.7692 6.6298 42.1053 6.95724C41.4394 7.28568 40.6724 7.89834 39.8426 8.84022L45.1954 33.5534ZM45.1954 33.5534H45.6954H55.2229C57.3231 33.5534 58.4308 34.2001 58.7871 34.9896C59.1431 35.7786 58.8954 37.0359 57.5003 38.6111L57.4991 38.6124L36.6249 62.3541L36.6249 62.3541L34.1586 65.1596C33.3286 66.1017 32.5615 66.7145 31.8955 67.0429C31.2316 67.3704 30.7079 67.3984 30.3119 67.2497C29.9161 67.1011 29.5414 66.7361 29.2594 66.0536C28.9764 65.3686 28.8054 64.4029 28.8054 63.1468V40.9468V40.4468H28.3054H18.7779C16.6777 40.4468 15.57 39.8001 15.2138 39.0106C14.8577 38.2215 15.1054 36.9643 16.5005 35.3891L16.5017 35.3877L37.3759 11.6461L37.3759 11.6461L39.8422 8.84061L45.1954 33.5534Z\"\n          fill=\"#31B099\"\n          stroke=\"#31B099\"\n        />\n      </svg>\n    ),\n  },\n  {\n    label: \"Earn commission on the customers you refer to Finlab\",\n    description:\n      \"Supported by access to sales materials and co-branded collateral.\",\n    icon: (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"74\"\n        height=\"74\"\n        viewBox=\"0 0 74 74\"\n        fill=\"none\"\n      >\n        <path\n          d=\"M29.291 42.3961C29.291 45.3869 31.6036 47.7919 34.4402 47.7919H40.2368C42.7035 47.7919 44.7077 45.6952 44.7077 43.0744C44.7077 40.2686 43.4744 39.2511 41.6552 38.6036L32.3743 35.3661C30.5552 34.7186 29.3219 33.7319 29.3219 30.8952C29.3219 28.3052 31.326 26.1777 33.7927 26.1777H39.5893C42.426 26.1777 44.7385 28.5827 44.7385 31.5736\"\n          stroke=\"#31B099\"\n          strokeWidth=\"4.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M37 23.125V50.875\"\n          stroke=\"#31B099\"\n          strokeWidth=\"4.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M67.8327 36.9998C67.8327 54.0198 54.0194 67.8332 36.9994 67.8332C19.9793 67.8332 6.16602 54.0198 6.16602 36.9998C6.16602 19.9798 19.9793 6.1665 36.9994 6.1665\"\n          stroke=\"#31B099\"\n          strokeWidth=\"4.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M52.416 9.25V21.5833H64.7493\"\n          stroke=\"#31B099\"\n          strokeWidth=\"4.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M67.8327 6.1665L52.416 21.5832\"\n          stroke=\"#31B099\"\n          strokeWidth=\"4.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </svg>\n    ),\n  },\n  {\n    label: \"Power countless integration use cases\",\n    description:\n      \"Make payments, reporting, and more work like magic with the Brex API and no-code platforms.\",\n    icon: (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"74\"\n        height=\"74\"\n        viewBox=\"0 0 74 74\"\n        fill=\"none\"\n      >\n        <path\n          d=\"M63.209 29.2915C67.834 29.2915 67.834 30.8332 67.834 33.9165V40.0832C67.834 43.1665 67.834 44.7082 63.209 44.7082\"\n          stroke=\"#31B099\"\n          strokeWidth=\"4.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M30.8327 24.6665L25.0052 32.3748C23.8027 34.4407 25.2827 36.9998 27.6569 36.9998H34.7486C37.1227 36.9998 38.6027 39.559 37.4311 41.6248L30.8327 49.3332\"\n          stroke=\"#31B099\"\n          strokeWidth=\"4.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M21.5827 58.5832C9.24935 58.5832 6.16602 55.4998 6.16602 43.1665V30.8332C6.16602 18.4998 9.24935 15.4165 21.5827 15.4165\"\n          stroke=\"#31B099\"\n          strokeWidth=\"4.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <path\n          d=\"M40.084 15.4165C52.4173 15.4165 55.5007 18.4998 55.5007 30.8332V43.1665C55.5007 55.4998 52.4173 58.5832 40.084 58.5832\"\n          stroke=\"#31B099\"\n          strokeWidth=\"4.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </svg>\n    ),\n  },\n];\n", "import {\n  Button,\n  Container,\n  Heading,\n  Input,\n  Label,\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectTrigger,\n  SelectValue,\n} from \"~/components/ui\";\n\nexport default function PartnerForm() {\n  return (\n    <section className=\"bg-white py-10 lg:py-24\">\n      <Container>\n        <div className=\"mx-auto mb-3 w-fit rounded-full bg-[#F4F4F7] px-6 py-1.5 text-xs text-secondary-500 lg:text-sm\">\n          Become our partner \uD83E\uDD1F\uD83C\uDFFB\n        </div>\n\n        <Heading\n          variant=\"h2\"\n          className=\"pb-12 text-center font-bold leading-tight tracking-[-1.68px] text-[#1B2632]\"\n        >\n          Let\u2019s become a partner\n        </Heading>\n\n        <div className=\"mx-auto max-w-3xl space-y-7\">\n          <div className=\"space-y-[3px]\">\n            <Label htmlFor=\"firstName\">First Name</Label>\n            <Input id=\"firstName\" placeholder=\"First Name\" />\n          </div>\n\n          <div className=\"space-y-[3px]\">\n            <Label htmlFor=\"lastName\">Last Name</Label>\n            <Input id=\"lastName\" placeholder=\"Last Name\" />\n          </div>\n\n          <div className=\"space-y-[3px]\">\n            <Label htmlFor=\"workEmail\">Work Email</Label>\n            <Input type=\"email\" id=\"workEmail\" placeholder=\"Work Email\" />\n          </div>\n\n          <div className=\"space-y-[3px]\">\n            <Label htmlFor=\"companyName\">Company Name</Label>\n            <Input id=\"companyName\" placeholder=\"Company Name\" />\n          </div>\n\n          <div className=\"space-y-[3px]\">\n            <Label htmlFor=\"companyWebsite\">Company website</Label>\n            <Input id=\"companyWebsite\" placeholder=\"Company website\" />\n          </div>\n\n          <div className=\"space-y-[3px]\">\n            <Label htmlFor=\"numberOfClient\">Number of client served</Label>\n            <Select>\n              <SelectTrigger className=\"w-full\">\n                <SelectValue placeholder=\"Select\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectGroup>\n                  <SelectLabel>Fruits</SelectLabel>\n                  <SelectItem value=\"apple\">Apple</SelectItem>\n                  <SelectItem value=\"banana\">Banana</SelectItem>\n                  <SelectItem value=\"blueberry\">Blueberry</SelectItem>\n                  <SelectItem value=\"grapes\">Grapes</SelectItem>\n                  <SelectItem value=\"pineapple\">Pineapple</SelectItem>\n                </SelectGroup>\n              </SelectContent>\n            </Select>\n          </div>\n\n          <div className=\"flex justify-end\">\n            <Button size=\"lg\">Apply</Button>\n          </div>\n        </div>\n      </Container>\n    </section>\n  );\n}\n", "import * as React from \"react\";\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\";\n\nimport { cn } from \"~/utils/cn\";\n\nconst Accordion = AccordionPrimitive.Root;\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n));\nAccordionItem.displayName = \"AccordionItem\";\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 text-left text-lg font-bold text-secondary-500 transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"18\"\n        height=\"9\"\n        viewBox=\"0 0 18 9\"\n        fill=\"none\"\n        className=\"h-4 w-4 shrink-0 transition-transform duration-200\"\n      >\n        <path\n          d=\"M16.9201 0.950195L10.4001 7.4702C9.63008 8.2402 8.37008 8.2402 7.60008 7.4702L1.08008 0.950195\"\n          stroke=\"#1A1C1E\"\n          strokeWidth=\"1.5\"\n          strokeMiterlimit=\"10\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </svg>\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n));\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName;\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"overflow-hidden text-base text-secondary-500 transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"pb-4 pt-0\">{children}</div>\n  </AccordionPrimitive.Content>\n));\nAccordionContent.displayName = AccordionPrimitive.Content.displayName;\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent };\n", "import React from 'react';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as CollapsiblePrimitive from '@radix-ui/react-collapsible';\nimport { createCollapsibleScope } from '@radix-ui/react-collapsible';\nimport { useId } from '@radix-ui/react-id';\n\nimport type { Scope } from '@radix-ui/react-context';\nimport { useDirection } from '@radix-ui/react-direction';\n\ntype Direction = 'ltr' | 'rtl';\n\n/* -------------------------------------------------------------------------------------------------\n * Accordion\n * -----------------------------------------------------------------------------------------------*/\n\nconst ACCORDION_NAME = 'Accordion';\nconst ACCORDION_KEYS = ['Home', 'End', 'ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowRight'];\n\nconst [Collection, useCollection, createCollectionScope] =\n  createCollection<AccordionTriggerElement>(ACCORDION_NAME);\n\ntype ScopedProps<P> = P & { __scopeAccordion?: Scope };\nconst [createAccordionContext, createAccordionScope] = createContextScope(ACCORDION_NAME, [\n  createCollectionScope,\n  createCollapsibleScope,\n]);\nconst useCollapsibleScope = createCollapsibleScope();\n\ntype AccordionElement = AccordionImplMultipleElement | AccordionImplSingleElement;\ninterface AccordionSingleProps extends AccordionImplSingleProps {\n  type: 'single';\n}\ninterface AccordionMultipleProps extends AccordionImplMultipleProps {\n  type: 'multiple';\n}\n\nconst Accordion = React.forwardRef<AccordionElement, AccordionSingleProps | AccordionMultipleProps>(\n  (props: ScopedProps<AccordionSingleProps | AccordionMultipleProps>, forwardedRef) => {\n    const { type, ...accordionProps } = props;\n    const singleProps = accordionProps as AccordionImplSingleProps;\n    const multipleProps = accordionProps as AccordionImplMultipleProps;\n    return (\n      <Collection.Provider scope={props.__scopeAccordion}>\n        {type === 'multiple' ? (\n          <AccordionImplMultiple {...multipleProps} ref={forwardedRef} />\n        ) : (\n          <AccordionImplSingle {...singleProps} ref={forwardedRef} />\n        )}\n      </Collection.Provider>\n    );\n  }\n);\n\nAccordion.displayName = ACCORDION_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype AccordionValueContextValue = {\n  value: string[];\n  onItemOpen(value: string): void;\n  onItemClose(value: string): void;\n};\n\nconst [AccordionValueProvider, useAccordionValueContext] =\n  createAccordionContext<AccordionValueContextValue>(ACCORDION_NAME);\n\nconst [AccordionCollapsibleProvider, useAccordionCollapsibleContext] = createAccordionContext(\n  ACCORDION_NAME,\n  { collapsible: false }\n);\n\ntype AccordionImplSingleElement = AccordionImplElement;\ninterface AccordionImplSingleProps extends AccordionImplProps {\n  /**\n   * The controlled stateful value of the accordion item whose content is expanded.\n   */\n  value?: string;\n  /**\n   * The value of the item whose content is expanded when the accordion is initially rendered. Use\n   * `defaultValue` if you do not need to control the state of an accordion.\n   */\n  defaultValue?: string;\n  /**\n   * The callback that fires when the state of the accordion changes.\n   */\n  onValueChange?(value: string): void;\n  /**\n   * Whether an accordion item can be collapsed after it has been opened.\n   * @default false\n   */\n  collapsible?: boolean;\n}\n\nconst AccordionImplSingle = React.forwardRef<AccordionImplSingleElement, AccordionImplSingleProps>(\n  (props: ScopedProps<AccordionImplSingleProps>, forwardedRef) => {\n    const {\n      value: valueProp,\n      defaultValue,\n      onValueChange = () => {},\n      collapsible = false,\n      ...accordionSingleProps\n    } = props;\n\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      defaultProp: defaultValue ?? '',\n      onChange: onValueChange,\n      caller: ACCORDION_NAME,\n    });\n\n    return (\n      <AccordionValueProvider\n        scope={props.__scopeAccordion}\n        value={React.useMemo(() => (value ? [value] : []), [value])}\n        onItemOpen={setValue}\n        onItemClose={React.useCallback(() => collapsible && setValue(''), [collapsible, setValue])}\n      >\n        <AccordionCollapsibleProvider scope={props.__scopeAccordion} collapsible={collapsible}>\n          <AccordionImpl {...accordionSingleProps} ref={forwardedRef} />\n        </AccordionCollapsibleProvider>\n      </AccordionValueProvider>\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype AccordionImplMultipleElement = AccordionImplElement;\ninterface AccordionImplMultipleProps extends AccordionImplProps {\n  /**\n   * The controlled stateful value of the accordion items whose contents are expanded.\n   */\n  value?: string[];\n  /**\n   * The value of the items whose contents are expanded when the accordion is initially rendered. Use\n   * `defaultValue` if you do not need to control the state of an accordion.\n   */\n  defaultValue?: string[];\n  /**\n   * The callback that fires when the state of the accordion changes.\n   */\n  onValueChange?(value: string[]): void;\n}\n\nconst AccordionImplMultiple = React.forwardRef<\n  AccordionImplMultipleElement,\n  AccordionImplMultipleProps\n>((props: ScopedProps<AccordionImplMultipleProps>, forwardedRef) => {\n  const {\n    value: valueProp,\n    defaultValue,\n    onValueChange = () => {},\n    ...accordionMultipleProps\n  } = props;\n\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue ?? [],\n    onChange: onValueChange,\n    caller: ACCORDION_NAME,\n  });\n\n  const handleItemOpen = React.useCallback(\n    (itemValue: string) => setValue((prevValue = []) => [...prevValue, itemValue]),\n    [setValue]\n  );\n\n  const handleItemClose = React.useCallback(\n    (itemValue: string) =>\n      setValue((prevValue = []) => prevValue.filter((value) => value !== itemValue)),\n    [setValue]\n  );\n\n  return (\n    <AccordionValueProvider\n      scope={props.__scopeAccordion}\n      value={value}\n      onItemOpen={handleItemOpen}\n      onItemClose={handleItemClose}\n    >\n      <AccordionCollapsibleProvider scope={props.__scopeAccordion} collapsible={true}>\n        <AccordionImpl {...accordionMultipleProps} ref={forwardedRef} />\n      </AccordionCollapsibleProvider>\n    </AccordionValueProvider>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype AccordionImplContextValue = {\n  disabled?: boolean;\n  direction: AccordionImplProps['dir'];\n  orientation: AccordionImplProps['orientation'];\n};\n\nconst [AccordionImplProvider, useAccordionContext] =\n  createAccordionContext<AccordionImplContextValue>(ACCORDION_NAME);\n\ntype AccordionImplElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface AccordionImplProps extends PrimitiveDivProps {\n  /**\n   * Whether or not an accordion is disabled from user interaction.\n   *\n   * @defaultValue false\n   */\n  disabled?: boolean;\n  /**\n   * The layout in which the Accordion operates.\n   * @default vertical\n   */\n  orientation?: React.AriaAttributes['aria-orientation'];\n  /**\n   * The language read direction.\n   */\n  dir?: Direction;\n}\n\nconst AccordionImpl = React.forwardRef<AccordionImplElement, AccordionImplProps>(\n  (props: ScopedProps<AccordionImplProps>, forwardedRef) => {\n    const { __scopeAccordion, disabled, dir, orientation = 'vertical', ...accordionProps } = props;\n    const accordionRef = React.useRef<AccordionImplElement>(null);\n    const composedRefs = useComposedRefs(accordionRef, forwardedRef);\n    const getItems = useCollection(__scopeAccordion);\n    const direction = useDirection(dir);\n    const isDirectionLTR = direction === 'ltr';\n\n    const handleKeyDown = composeEventHandlers(props.onKeyDown, (event) => {\n      if (!ACCORDION_KEYS.includes(event.key)) return;\n      const target = event.target as HTMLElement;\n      const triggerCollection = getItems().filter((item) => !item.ref.current?.disabled);\n      const triggerIndex = triggerCollection.findIndex((item) => item.ref.current === target);\n      const triggerCount = triggerCollection.length;\n\n      if (triggerIndex === -1) return;\n\n      // Prevents page scroll while user is navigating\n      event.preventDefault();\n\n      let nextIndex = triggerIndex;\n      const homeIndex = 0;\n      const endIndex = triggerCount - 1;\n\n      const moveNext = () => {\n        nextIndex = triggerIndex + 1;\n        if (nextIndex > endIndex) {\n          nextIndex = homeIndex;\n        }\n      };\n\n      const movePrev = () => {\n        nextIndex = triggerIndex - 1;\n        if (nextIndex < homeIndex) {\n          nextIndex = endIndex;\n        }\n      };\n\n      switch (event.key) {\n        case 'Home':\n          nextIndex = homeIndex;\n          break;\n        case 'End':\n          nextIndex = endIndex;\n          break;\n        case 'ArrowRight':\n          if (orientation === 'horizontal') {\n            if (isDirectionLTR) {\n              moveNext();\n            } else {\n              movePrev();\n            }\n          }\n          break;\n        case 'ArrowDown':\n          if (orientation === 'vertical') {\n            moveNext();\n          }\n          break;\n        case 'ArrowLeft':\n          if (orientation === 'horizontal') {\n            if (isDirectionLTR) {\n              movePrev();\n            } else {\n              moveNext();\n            }\n          }\n          break;\n        case 'ArrowUp':\n          if (orientation === 'vertical') {\n            movePrev();\n          }\n          break;\n      }\n\n      const clampedIndex = nextIndex % triggerCount;\n      triggerCollection[clampedIndex]!.ref.current?.focus();\n    });\n\n    return (\n      <AccordionImplProvider\n        scope={__scopeAccordion}\n        disabled={disabled}\n        direction={dir}\n        orientation={orientation}\n      >\n        <Collection.Slot scope={__scopeAccordion}>\n          <Primitive.div\n            {...accordionProps}\n            data-orientation={orientation}\n            ref={composedRefs}\n            onKeyDown={disabled ? undefined : handleKeyDown}\n          />\n        </Collection.Slot>\n      </AccordionImplProvider>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'AccordionItem';\n\ntype AccordionItemContextValue = { open?: boolean; disabled?: boolean; triggerId: string };\nconst [AccordionItemProvider, useAccordionItemContext] =\n  createAccordionContext<AccordionItemContextValue>(ITEM_NAME);\n\ntype AccordionItemElement = React.ComponentRef<typeof CollapsiblePrimitive.Root>;\ntype CollapsibleProps = React.ComponentPropsWithoutRef<typeof CollapsiblePrimitive.Root>;\ninterface AccordionItemProps\n  extends Omit<CollapsibleProps, 'open' | 'defaultOpen' | 'onOpenChange'> {\n  /**\n   * Whether or not an accordion item is disabled from user interaction.\n   *\n   * @defaultValue false\n   */\n  disabled?: boolean;\n  /**\n   * A string value for the accordion item. All items within an accordion should use a unique value.\n   */\n  value: string;\n}\n\n/**\n * `AccordionItem` contains all of the parts of a collapsible section inside of an `Accordion`.\n */\nconst AccordionItem = React.forwardRef<AccordionItemElement, AccordionItemProps>(\n  (props: ScopedProps<AccordionItemProps>, forwardedRef) => {\n    const { __scopeAccordion, value, ...accordionItemProps } = props;\n    const accordionContext = useAccordionContext(ITEM_NAME, __scopeAccordion);\n    const valueContext = useAccordionValueContext(ITEM_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    const triggerId = useId();\n    const open = (value && valueContext.value.includes(value)) || false;\n    const disabled = accordionContext.disabled || props.disabled;\n\n    return (\n      <AccordionItemProvider\n        scope={__scopeAccordion}\n        open={open}\n        disabled={disabled}\n        triggerId={triggerId}\n      >\n        <CollapsiblePrimitive.Root\n          data-orientation={accordionContext.orientation}\n          data-state={getState(open)}\n          {...collapsibleScope}\n          {...accordionItemProps}\n          ref={forwardedRef}\n          disabled={disabled}\n          open={open}\n          onOpenChange={(open) => {\n            if (open) {\n              valueContext.onItemOpen(value);\n            } else {\n              valueContext.onItemClose(value);\n            }\n          }}\n        />\n      </AccordionItemProvider>\n    );\n  }\n);\n\nAccordionItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionHeader\n * -----------------------------------------------------------------------------------------------*/\n\nconst HEADER_NAME = 'AccordionHeader';\n\ntype AccordionHeaderElement = React.ComponentRef<typeof Primitive.h3>;\ntype PrimitiveHeading3Props = React.ComponentPropsWithoutRef<typeof Primitive.h3>;\ninterface AccordionHeaderProps extends PrimitiveHeading3Props {}\n\n/**\n * `AccordionHeader` contains the content for the parts of an `AccordionItem` that will be visible\n * whether or not its content is collapsed.\n */\nconst AccordionHeader = React.forwardRef<AccordionHeaderElement, AccordionHeaderProps>(\n  (props: ScopedProps<AccordionHeaderProps>, forwardedRef) => {\n    const { __scopeAccordion, ...headerProps } = props;\n    const accordionContext = useAccordionContext(ACCORDION_NAME, __scopeAccordion);\n    const itemContext = useAccordionItemContext(HEADER_NAME, __scopeAccordion);\n    return (\n      <Primitive.h3\n        data-orientation={accordionContext.orientation}\n        data-state={getState(itemContext.open)}\n        data-disabled={itemContext.disabled ? '' : undefined}\n        {...headerProps}\n        ref={forwardedRef}\n      />\n    );\n  }\n);\n\nAccordionHeader.displayName = HEADER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'AccordionTrigger';\n\ntype AccordionTriggerElement = React.ComponentRef<typeof CollapsiblePrimitive.Trigger>;\ntype CollapsibleTriggerProps = React.ComponentPropsWithoutRef<typeof CollapsiblePrimitive.Trigger>;\ninterface AccordionTriggerProps extends CollapsibleTriggerProps {}\n\n/**\n * `AccordionTrigger` is the trigger that toggles the collapsed state of an `AccordionItem`. It\n * should always be nested inside of an `AccordionHeader`.\n */\nconst AccordionTrigger = React.forwardRef<AccordionTriggerElement, AccordionTriggerProps>(\n  (props: ScopedProps<AccordionTriggerProps>, forwardedRef) => {\n    const { __scopeAccordion, ...triggerProps } = props;\n    const accordionContext = useAccordionContext(ACCORDION_NAME, __scopeAccordion);\n    const itemContext = useAccordionItemContext(TRIGGER_NAME, __scopeAccordion);\n    const collapsibleContext = useAccordionCollapsibleContext(TRIGGER_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    return (\n      <Collection.ItemSlot scope={__scopeAccordion}>\n        <CollapsiblePrimitive.Trigger\n          aria-disabled={(itemContext.open && !collapsibleContext.collapsible) || undefined}\n          data-orientation={accordionContext.orientation}\n          id={itemContext.triggerId}\n          {...collapsibleScope}\n          {...triggerProps}\n          ref={forwardedRef}\n        />\n      </Collection.ItemSlot>\n    );\n  }\n);\n\nAccordionTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * AccordionContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'AccordionContent';\n\ntype AccordionContentElement = React.ComponentRef<typeof CollapsiblePrimitive.Content>;\ntype CollapsibleContentProps = React.ComponentPropsWithoutRef<typeof CollapsiblePrimitive.Content>;\ninterface AccordionContentProps extends CollapsibleContentProps {}\n\n/**\n * `AccordionContent` contains the collapsible content for an `AccordionItem`.\n */\nconst AccordionContent = React.forwardRef<AccordionContentElement, AccordionContentProps>(\n  (props: ScopedProps<AccordionContentProps>, forwardedRef) => {\n    const { __scopeAccordion, ...contentProps } = props;\n    const accordionContext = useAccordionContext(ACCORDION_NAME, __scopeAccordion);\n    const itemContext = useAccordionItemContext(CONTENT_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    return (\n      <CollapsiblePrimitive.Content\n        role=\"region\"\n        aria-labelledby={itemContext.triggerId}\n        data-orientation={accordionContext.orientation}\n        {...collapsibleScope}\n        {...contentProps}\n        ref={forwardedRef}\n        style={{\n          ['--radix-accordion-content-height' as any]: 'var(--radix-collapsible-content-height)',\n          ['--radix-accordion-content-width' as any]: 'var(--radix-collapsible-content-width)',\n          ...props.style,\n        }}\n      />\n    );\n  }\n);\n\nAccordionContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open?: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst Root = Accordion;\nconst Item = AccordionItem;\nconst Header = AccordionHeader;\nconst Trigger = AccordionTrigger;\nconst Content = AccordionContent;\n\nexport {\n  createAccordionScope,\n  //\n  Accordion,\n  AccordionItem,\n  AccordionHeader,\n  AccordionTrigger,\n  AccordionContent,\n  //\n  Root,\n  Item,\n  Header,\n  Trigger,\n  Content,\n};\nexport type {\n  AccordionSingleProps,\n  AccordionMultipleProps,\n  AccordionItemProps,\n  AccordionHeaderProps,\n  AccordionTriggerProps,\n  AccordionContentProps,\n};\n", "import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Presence } from '@radix-ui/react-presence';\nimport { useId } from '@radix-ui/react-id';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Collapsible\n * -----------------------------------------------------------------------------------------------*/\n\nconst COLLAPSIBLE_NAME = 'Collapsible';\n\ntype ScopedProps<P> = P & { __scopeCollapsible?: Scope };\nconst [createCollapsibleContext, createCollapsibleScope] = createContextScope(COLLAPSIBLE_NAME);\n\ntype CollapsibleContextValue = {\n  contentId: string;\n  disabled?: boolean;\n  open: boolean;\n  onOpenToggle(): void;\n};\n\nconst [CollapsibleProvider, useCollapsibleContext] =\n  createCollapsibleContext<CollapsibleContextValue>(COLLAPSIBLE_NAME);\n\ntype CollapsibleElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface CollapsibleProps extends PrimitiveDivProps {\n  defaultOpen?: boolean;\n  open?: boolean;\n  disabled?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst Collapsible = React.forwardRef<CollapsibleElement, CollapsibleProps>(\n  (props: ScopedProps<CollapsibleProps>, forwardedRef) => {\n    const {\n      __scopeCollapsible,\n      open: openProp,\n      defaultOpen,\n      disabled,\n      onOpenChange,\n      ...collapsibleProps\n    } = props;\n\n    const [open, setOpen] = useControllableState({\n      prop: openProp,\n      defaultProp: defaultOpen ?? false,\n      onChange: onOpenChange,\n      caller: COLLAPSIBLE_NAME,\n    });\n\n    return (\n      <CollapsibleProvider\n        scope={__scopeCollapsible}\n        disabled={disabled}\n        contentId={useId()}\n        open={open}\n        onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      >\n        <Primitive.div\n          data-state={getState(open)}\n          data-disabled={disabled ? '' : undefined}\n          {...collapsibleProps}\n          ref={forwardedRef}\n        />\n      </CollapsibleProvider>\n    );\n  }\n);\n\nCollapsible.displayName = COLLAPSIBLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CollapsibleTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'CollapsibleTrigger';\n\ntype CollapsibleTriggerElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface CollapsibleTriggerProps extends PrimitiveButtonProps {}\n\nconst CollapsibleTrigger = React.forwardRef<CollapsibleTriggerElement, CollapsibleTriggerProps>(\n  (props: ScopedProps<CollapsibleTriggerProps>, forwardedRef) => {\n    const { __scopeCollapsible, ...triggerProps } = props;\n    const context = useCollapsibleContext(TRIGGER_NAME, __scopeCollapsible);\n    return (\n      <Primitive.button\n        type=\"button\"\n        aria-controls={context.contentId}\n        aria-expanded={context.open || false}\n        data-state={getState(context.open)}\n        data-disabled={context.disabled ? '' : undefined}\n        disabled={context.disabled}\n        {...triggerProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n  }\n);\n\nCollapsibleTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CollapsibleContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'CollapsibleContent';\n\ntype CollapsibleContentElement = CollapsibleContentImplElement;\ninterface CollapsibleContentProps extends Omit<CollapsibleContentImplProps, 'present'> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst CollapsibleContent = React.forwardRef<CollapsibleContentElement, CollapsibleContentProps>(\n  (props: ScopedProps<CollapsibleContentProps>, forwardedRef) => {\n    const { forceMount, ...contentProps } = props;\n    const context = useCollapsibleContext(CONTENT_NAME, props.__scopeCollapsible);\n    return (\n      <Presence present={forceMount || context.open}>\n        {({ present }) => (\n          <CollapsibleContentImpl {...contentProps} ref={forwardedRef} present={present} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nCollapsibleContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype CollapsibleContentImplElement = React.ComponentRef<typeof Primitive.div>;\ninterface CollapsibleContentImplProps extends PrimitiveDivProps {\n  present: boolean;\n}\n\nconst CollapsibleContentImpl = React.forwardRef<\n  CollapsibleContentImplElement,\n  CollapsibleContentImplProps\n>((props: ScopedProps<CollapsibleContentImplProps>, forwardedRef) => {\n  const { __scopeCollapsible, present, children, ...contentProps } = props;\n  const context = useCollapsibleContext(CONTENT_NAME, __scopeCollapsible);\n  const [isPresent, setIsPresent] = React.useState(present);\n  const ref = React.useRef<CollapsibleContentImplElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const heightRef = React.useRef<number | undefined>(0);\n  const height = heightRef.current;\n  const widthRef = React.useRef<number | undefined>(0);\n  const width = widthRef.current;\n  // when opening we want it to immediately open to retrieve dimensions\n  // when closing we delay `present` to retrieve dimensions before closing\n  const isOpen = context.open || isPresent;\n  const isMountAnimationPreventedRef = React.useRef(isOpen);\n  const originalStylesRef = React.useRef<Record<string, string>>(undefined);\n\n  React.useEffect(() => {\n    const rAF = requestAnimationFrame(() => (isMountAnimationPreventedRef.current = false));\n    return () => cancelAnimationFrame(rAF);\n  }, []);\n\n  useLayoutEffect(() => {\n    const node = ref.current;\n    if (node) {\n      originalStylesRef.current = originalStylesRef.current || {\n        transitionDuration: node.style.transitionDuration,\n        animationName: node.style.animationName,\n      };\n      // block any animations/transitions so the element renders at its full dimensions\n      node.style.transitionDuration = '0s';\n      node.style.animationName = 'none';\n\n      // get width and height from full dimensions\n      const rect = node.getBoundingClientRect();\n      heightRef.current = rect.height;\n      widthRef.current = rect.width;\n\n      // kick off any animations/transitions that were originally set up if it isn't the initial mount\n      if (!isMountAnimationPreventedRef.current) {\n        node.style.transitionDuration = originalStylesRef.current.transitionDuration!;\n        node.style.animationName = originalStylesRef.current.animationName!;\n      }\n\n      setIsPresent(present);\n    }\n    /**\n     * depends on `context.open` because it will change to `false`\n     * when a close is triggered but `present` will be `false` on\n     * animation end (so when close finishes). This allows us to\n     * retrieve the dimensions *before* closing.\n     */\n  }, [context.open, present]);\n\n  return (\n    <Primitive.div\n      data-state={getState(context.open)}\n      data-disabled={context.disabled ? '' : undefined}\n      id={context.contentId}\n      hidden={!isOpen}\n      {...contentProps}\n      ref={composedRefs}\n      style={{\n        [`--radix-collapsible-content-height` as any]: height ? `${height}px` : undefined,\n        [`--radix-collapsible-content-width` as any]: width ? `${width}px` : undefined,\n        ...props.style,\n      }}\n    >\n      {isOpen && children}\n    </Primitive.div>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open?: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst Root = Collapsible;\nconst Trigger = CollapsibleTrigger;\nconst Content = CollapsibleContent;\n\nexport {\n  createCollapsibleScope,\n  //\n  Collapsible,\n  CollapsibleTrigger,\n  CollapsibleContent,\n  //\n  Root,\n  Trigger,\n  Content,\n};\nexport type { CollapsibleProps, CollapsibleTriggerProps, CollapsibleContentProps };\n", "import { Container, Heading } from \"~/components/ui\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"~/components/ui/accordion\";\n\nexport default function FAQ() {\n  return (\n    <section className=\"bg-white py-10 lg:py-24\">\n      <Container>\n        <div className=\"mx-auto mb-3 w-fit rounded-full bg-[#F4F4F7] px-6 py-1.5 text-xs text-secondary-500 lg:text-sm\">\n          Some frequently asked questions \uD83D\uDC4D\uD83C\uDFFB\n        </div>\n\n        <Heading\n          variant=\"h2\"\n          className=\"pb-20 text-center font-bold leading-tight tracking-[-1.68px] text-[#1B2632]\"\n        >\n          Frequently asked questions\n        </Heading>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 lg:gap-8\">\n          <Accordion type=\"single\" collapsible className=\"w-full\">\n            <AccordionItem value=\"item-1\">\n              <AccordionTrigger>\n                How does the partner program work?\n              </AccordionTrigger>\n              <AccordionContent>\n                The Partner Program is a service that allows participating\n                partners to earn commission and fees on referred customers. We\n                provide you with the materials and resources you\u2019ll need to get\n                started.\n              </AccordionContent>\n            </AccordionItem>\n            <AccordionItem value=\"item-2\">\n              <AccordionTrigger>Are there any fees?</AccordionTrigger>\n              <AccordionContent>No fees to participate. </AccordionContent>\n            </AccordionItem>\n            <AccordionItem value=\"item-3\">\n              <AccordionTrigger>How often do I get paid?</AccordionTrigger>\n              <AccordionContent>\n                Brex will send your earned fees on a monthly basis.\n              </AccordionContent>\n            </AccordionItem>\n          </Accordion>\n\n          <Accordion type=\"single\" collapsible className=\"w-full\">\n            <AccordionItem value=\"item-1\">\n              <AccordionTrigger>Am I eligible?</AccordionTrigger>\n              <AccordionContent>\n                If you work primarily with US-based companies that you think\n                would benefit from Brex\u2019s unique financial products, we\u2019d love\n                to have you on board.\n              </AccordionContent>\n            </AccordionItem>\n            <AccordionItem value=\"item-2\">\n              <AccordionTrigger>How much will I get paid?</AccordionTrigger>\n              <AccordionContent>\n                Brex offers partners tiered revenue share-based fee structures,\n                which depend on the volume of customers you refer and how much\n                money they spend on their Brex financial products. Apply to\n                learn where your company fits in.\n              </AccordionContent>\n            </AccordionItem>\n            <AccordionItem value=\"item-3\">\n              <AccordionTrigger>Is it animated?</AccordionTrigger>\n              <AccordionContent>\n                Yes. It&apos;s animated by default, but you can disable it if\n                you prefer.\n              </AccordionContent>\n            </AccordionItem>\n          </Accordion>\n        </div>\n      </Container>\n    </section>\n  );\n}\n", "import type { V2_MetaFunction } from \"@remix-run/node\";\n// components\nimport { CallToAction } from \"../../components\";\nimport { Benefit, FAQ, Hero, PartnerForm } from \"./components\";\n\nexport const meta: V2_MetaFunction = () => [\n  { title: \"Partner | Remix Template\" },\n];\n\nexport default function _route() {\n  return (\n    <>\n      <Hero />\n      <Benefit />\n      <PartnerForm />\n      <FAQ />\n      <CallToAction />\n    </>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "import_jsx_dev_runtime", "React", "import_react", "import_jsx_runtime", "React", "value", "getState", "open", "TRIGGER_NAME", "CONTENT_NAME", "Root", "Trigger", "Content", "import_jsx_dev_runtime", "Accordion", "AccordionItem", "AccordionTrigger", "AccordionContent", "import_jsx_dev_runtime", "Accordion", "AccordionItem", "AccordionTrigger", "AccordionContent", "import_jsx_dev_runtime"]
}
